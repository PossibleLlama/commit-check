name: "On commit - Main"

on:
  push:
    branches:
      - main

permissions: read-all

jobs:
  binary:
    name: Binary
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        arch:
          - amd64
          - arm64
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Set up Go 1.x
      uses: actions/setup-go@v4
      with:
        go-version-file: "./go.mod"

    - name: Get dependencies
      run: go mod download

    - name: Build
      run: APP_VERSION=$(git rev-list -1 HEAD) && go build -ldflags="-w -s -X 'github.com/${{ github.repository }}/cmd.VERSION=$APP_VERSION'" -o "./${{ github.repository }}-${{ matrix.os }}-${{ matrix.arch }}.bin" ./main.go
      env:
        GOOS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}

    - name: Store binaries
      uses: actions/upload-artifact@v3
      with:
        path: ./${{ github.repository }}-${{ matrix.os }}-${{ matrix.arch }}.bin
        if-no-files-found: ignore
        retention-days: 30

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - binary
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: "lts/*"

    - name: Download app
      uses: actions/download-artifact@v3
      with:
        path: .

    - name: Semantic Release
      run: |
        npm i @semantic-release/commit-analyzer @semantic-release/git @semantic-release/changelog conventional-changelog-conventionalcommits
        npx semantic-release@21
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

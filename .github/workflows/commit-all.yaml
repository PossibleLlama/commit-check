name: "On commit"

on: push

permissions: read-all

jobs:
  binary:
    name: Binary
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        goos:
          - linux
        goarch:
          - amd64
          - arm64
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go 1.x
      uses: actions/setup-go@v4
      with:
        go-version-file: "./go.mod"

    - name: Get dependencies
      run: go mod download

    - name: Build
      run: APP_VERSION=$(git rev-list -1 HEAD) && go build -ldflags="-w -s -X 'main.VERSION=$APP_VERSION'" -o "./${{ github.repository }}.bin" ./exec/cli/main.go
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}

  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go 1.x
      uses: actions/setup-go@v4
      with:
        go-version-file: "./go.mod"

    - name: Check formatting
      run: go fmt ./...

    - name: Check vet
      run: go vet ./...

    - name: Check linting
      uses: golangci/golangci-lint-action@v3
      with:
        skip-go-installation: true
        args: --issues-exit-code=0 --out-format checkstyle -v ./... > ./lint.out

    - name: Store linting report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: Linting report
        path: ./lint.out
        if-no-files-found: ignore
        retention-days: 2

  test-small-correctness:
    name: Small Tests - Correctness
    runs-on: ubuntu-latest
    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go 1.x
      uses: actions/setup-go@v4
      with:
        go-version-file: "./go.mod"

    - name: Get dependencies
      run: go mod download && go install gotest.tools/gotestsum@latest

    - name: Correctness tests
      run: gotestsum --packages="./..." --junitfile="./correctness-tests.xml" -- -coverprofile="./correctness-tests-coverage.out" -count=10 -race

    - name: Store test reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: Test small reports
        path: |
          ./correctness-tests.xml
          ./correctness-tests-coverage.out
        if-no-files-found: ignore
        retention-days: 2
